@inject ProfileState ProfileState
@inject LinesCurrentState LinesCurrentState
@inject LinesClickState LinesClickState
@inject LinesIdleState LinesIdleState

<div class="playercard">
  <div class="player-icon" style="background-image:url(@ProfileState.PlayerIcon)"></div>
  <div class="player-info">
    <div class="player-name">
      <span>@ProfileState.Playername</span>
      <span class="edit">üñäÔ∏è</span>
    </div>
    <div class="stats-container">
      <span>has written @(Math.Round(LinesCurrentState.LinesCurrent, 2)) Lines of Code</span>
      <span>(@(Math.Round(LinesIdleState.LinesIdle, 2)) LoC/sec)</span>
    </div>
  </div>
</div>

@code {
  protected override void OnInitialized()
  {
    AddLinesIdle();
  }

  private void AddLinesIdle()
  {
    var timer = new Timer(new TimerCallback(_ =>
    {
      LinesCurrentState.LinesCurrent += LinesIdleState.LinesIdle / 10;
      this.StateHasChanged();
    }), null, 100, 100);
  }
}