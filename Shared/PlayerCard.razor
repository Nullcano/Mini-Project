@inject ProfileState ProfileState
@inject LinesCurrentState LinesCurrentState
@inject LinesClickState LinesClickState
@inject LinesIdleState LinesIdleState

<div class="playercard">
  <div class="player-icon" style="background-image:url(@ProfileState.PlayerIcon)"></div>
  <div class="player-info">
    <div class="player-name">
      <span>@ProfileState.Playername</span>
      <span class="edit">üñäÔ∏è</span>
    </div>
    <div class="stats-container">
      <span>has written @String.Format("{0:0.00}", LinesCurrentState.LinesCurrent) Lines of Code</span>
      <span>(@String.Format("{0:0.00}", LinesIdleState.LinesIdle) LoC/sec)</span>
    </div>
  </div>
</div>

@code {
  protected async override void OnInitialized()
  {
    await AddLinesIdle();
  }
  private async Task AddLinesIdle()
  {
    await Task.Delay(100);
    LinesCurrentState.LinesCurrent = LinesCurrentState.LinesCurrent + LinesIdleState.LinesIdle;
    LinesCurrentState.OnChange += StateHasChanged;
    await AddLinesIdle();
  }
}